<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArgumentException" xml:space="preserve">
    <value>Argument Exception</value>
  </data>
  <data name="ArgumentNullException" xml:space="preserve">
    <value>Argument Null Exception</value>
  </data>
  <data name="ArgumentOutOfRangeException" xml:space="preserve">
    <value>Argument Out Of Range Exception</value>
  </data>
  <data name="DbEntityValidationException" xml:space="preserve">
    <value>Db Entity Validation Exception</value>
  </data>
  <data name="DivideByZeroException" xml:space="preserve">
    <value>Divide By Zero Exception</value>
  </data>
  <data name="EntityException" xml:space="preserve">
    <value>Entity Exception</value>
  </data>
  <data name="FileNotFoundException" xml:space="preserve">
    <value>File Not Found Exception</value>
  </data>
  <data name="FormatException" xml:space="preserve">
    <value>Format Exception</value>
  </data>
  <data name="GeneralMessageError" xml:space="preserve">
    <value>error happend</value>
  </data>
  <data name="GET_LOOKUPSITEMS_ERROR" xml:space="preserve">
    <value>عفواً، حدث خطأ أثناء جلب العنصر</value>
  </data>
  <data name="GET_LOOKUPSITEM_ERROR" xml:space="preserve">
    <value>عفواً، حدث خطأ أثناء جلب العنصر</value>
  </data>
  <data name="IndexOutOfRangeException" xml:space="preserve">
    <value>Index Out Of Range Exception</value>
  </data>
  <data name="InternalServerError" xml:space="preserve">
    <value>Internal Server Error , Please  Try Agin Later </value>
    <comment>General</comment>
  </data>
  <data name="InvalidCastException" xml:space="preserve">
    <value>Invalid Cast Exception</value>
  </data>
  <data name="InvalidFailureHttpStatusCode" xml:space="preserve">
    <value>Construct API Result: Invalid Failure HttpStatusCode</value>
  </data>
  <data name="InvalidOperationException" xml:space="preserve">
    <value>Invalid Operation Exception</value>
  </data>
  <data name="InvalidServerErrorHttpStatusCode" xml:space="preserve">
    <value>Construct API Result: Invalid Internal Server Error HttpStatusCode</value>
  </data>
  <data name="InvalidSuccessHttpStatusCode" xml:space="preserve">
    <value>Construct API Result: Invalid Success HttpStatusCode</value>
  </data>
  <data name="KeyNotFoundException" xml:space="preserve">
    <value>Key Not Found Exception</value>
  </data>
  <data name="NoAuthorization" xml:space="preserve">
    <value>No Authorization Privillage , Please  try to login again or contact with  System Administrator </value>
    <comment>AuthorizationController </comment>
  </data>
  <data name="NoISAMSessionKey" xml:space="preserve">
    <value>No Session Key  , Please Login Again </value>
    <comment>ISAMController </comment>
  </data>
  <data name="NotSupportedException" xml:space="preserve">
    <value>Not Supported Exception</value>
  </data>
  <data name="NullInputData" xml:space="preserve">
    <value>Send Data Not Correct , Please Check sent Data and send again</value>
    <comment>General </comment>
  </data>
  <data name="NullReferenceException" xml:space="preserve">
    <value>Null Reference Exception</value>
  </data>
  <data name="OutOfMemoryException" xml:space="preserve">
    <value>Out Of Memory Exception</value>
  </data>
  <data name="OverflowException" xml:space="preserve">
    <value>Overflow Exception</value>
  </data>
  <data name="SqlException" xml:space="preserve">
    <value>Sql Exception</value>
  </data>
  <data name="StackOverflowException" xml:space="preserve">
    <value>Stack Over flow Exception</value>
  </data>
  <data name="SubjectHasRequestConnected" xml:space="preserve">
    <value>cannot delete subject that has Requests connected to it</value>
  </data>
  <data name="TimeoutException" xml:space="preserve">
    <value>Time out Exception</value>
  </data>
  <data name="UnknownHttpStatusCode" xml:space="preserve">
    <value>Construct API Result: Unknown HttpStatusCode</value>
  </data>
  <data name="UriFormatException" xml:space="preserve">
    <value>Uri Format Exception</value>
  </data>
  <data name="MissingAuthorizationHeader" xml:space="preserve">
    <value>Missing Authorization Header</value>
  </data>
</root>